version: "3"
services:
  card-churning-service:
    build: "./card-churning-service"
    container_name: card-churning-service
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "8080:8080"
    depends_on:
      - card-churning-db
    volumes:
      - ./card-churning-service:/opt/app
    networks:
      - app-network
    # command: ./wait-for.sh card-churning-db:27017 -- yarn watch

  card-churning-db:
    image: mongo:4.2.3
    container_name: mongodb
    restart: unless-stopped
    env_file: .env
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
    volumes:
      - dbdata:/data/db
      - ./card-churning-service/tools/seed-mock-db.js:/docker-entrypoint-initdb.d/seed-mock-db.js:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  #   users-service:
  #     build: "./users-service"
  #     depends_on:
  #       - users-service-db
  #     volumes:
  #       - ./users-service:/opt/app
  #   users-service-db:
  #     image: mongo
  #     restart: always
  #     environment:
  #       MONGO_INITDB_ROOT_USERNAME: root
  #       MONGO_INITIDB_ROOT_PASSWORD: example
#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#     depends_on:
#       - card-churning-db
